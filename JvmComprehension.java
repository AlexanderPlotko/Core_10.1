package jvm;

public class JvmComprehension { //класс JvmComprehension отдается для загрузки в систему загрузчиков классов (ClassLoader)

    public static void main(String[] args) { //в момент вызова метода main создается фрейм в стеке
        int i = 1;                      // 1 - во фрейме создается примитивная переменная int i со значением 1
        Object o = new Object();        // 2 - в куче создается ссылочный объект Object,
        // во фрейме метода main создается объект "o" к которому присваивается ссылка на объект Object находящийся в куче
        Integer ii = 2;                 // 3 - в куче создается ссылочный объект Integer,
        // во фрейме метода main создается переменная "ii" к которому присваивается ссылка на объект Integer находящийся в куче
        printAll(o, i, ii);             // 4 - в момент вызова метода printAll создается новый фрейм в стеке
        //во фрейме printAll создаются переменные "o, i, ii" и к ним присваиваются ссылки на соответствующие объекты в куче
        //которые были ранее созданы
        System.out.println("finished"); // 7 - в стеке создается новый фрейм print,
        //в фрейм print передается ссылка на созданный в куче ссылочный объект String с текстом "finished"
        //после того как метод main будет выполнен, фрейм main будет удален из стека
    }

    private static void printAll(Object o, int i, Integer ii) {
        Integer uselessVar = 700;                   // 5 - в куче создается ссылочный объект Integer со значением 700,
        // во фрейме метода printAll создается переменная "uselessVar" к которому присваивается ссылка на объект Integer находящийся в куче
        System.out.println(o.toString() + i + ii);  // 6 - в стеке создается новый фрейм print,
        //в фрейм print передаются ссылки на  Object o, int i, Integer ii
        //после того как фрейм print будет выполнен, он будет удален из стека
        //после завершения работы метода printAll, фрейм printAll будет удален из стека
    }
}
